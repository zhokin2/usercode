1. Dlya 2D i 1D plots po Amplitude:
      c1->cd(1);
      TH2F *twod1= (TH2F*)hfile1->Get("h_mapDepth1ADCAmpl_HF");
      TH2F *twod0= (TH2F*)hfile1->Get("h_mapDepth1_HF");
      twod1->Sumw2();
      twod0->Sumw2();
      if(twod0->IsA()->InheritsFrom("TH2F")){
	TH2F* Ceff = (TH2F*)twod1->Clone("Ceff");
	Ceff->Divide(twod1,twod0, 1, 1, "B");
	Ceff->Sumw2();
      }
      gPad->SetGridy();
      gPad->SetGridx();
      gPad->SetLogz();
      Ceff->SetMarkerStyle(20);
      Ceff->SetMarkerSize(0.4);
      Ceff->GetZaxis()->SetLabelSize(0.08);
      Ceff->SetXTitle("#eta \b");
      Ceff->SetYTitle("#phi \b");
      Ceff->SetZTitle("h_mapDepth1ADCAmpl_HF \b");
      Ceff->SetMarkerColor(2);
      Ceff->SetLineColor(2);
      Ceff->Draw("COLZ");
            
      c1->cd(2);
    ///////////////////////////////////////
    TH2F* Diffe_Depth1_HF = (TH2F*)Ceff->Clone("Diffe_Depth1_HF");
    int nx = Ceff->GetXaxis()->GetNbins();
    int ny = Ceff->GetYaxis()->GetNbins();
    for (int i=1;i<=nx;i++) {
      for (int j=1;j<=ny;j++) {
	  double ccc1 =  Ceff->GetBinContent(i,j)   ;
	  Diffe_Depth1_HF->SetBinContent(i,j,0.);
	  if(ccc1 > 40.)  Diffe_Depth1_HF->SetBinContent(i,j,ccc1);
      }
    }
      gPad->SetGridy();
      gPad->SetGridx();
      gPad->SetLogz();
      Diffe_Depth1_HF->SetMarkerStyle(20);
      Diffe_Depth1_HF->SetMarkerSize(0.4);
      Diffe_Depth1_HF->GetZaxis()->SetLabelSize(0.08);
      Diffe_Depth1_HF->SetXTitle("#eta \b");
      Diffe_Depth1_HF->SetYTitle("#phi \b");
      Diffe_Depth1_HF->SetZTitle("<ADCAmpl> bigger 40.- HF Depth1 \b");
      Diffe_Depth1_HF->SetMarkerColor(2);
      Diffe_Depth1_HF->SetLineColor(2);
      Diffe_Depth1_HF->Draw("COLZ");

      c1->cd(3);
      TH2F *twod1= (TH2F*)hfile1->Get("h_mapDepth1ADCAmpl_HF");
      TH2F *twod0= (TH2F*)hfile1->Get("h_mapDepth1_HF");
      twod1->Sumw2();
      twod0->Sumw2();
      if(twod0->IsA()->InheritsFrom("TH2F")){
	TH2F* Ceff = (TH2F*)twod1->Clone("Ceff");
	Ceff->Divide(twod1,twod0, 1, 1, "B");
	Ceff->Sumw2();
      }
      TH1F* diffADCAmpl_Depth1_HF = new TH1F("diffADCAmpl_Depth1_HF","", 100, -20.,200.);
      int nx = Ceff->GetXaxis()->GetNbins();
      int ny = Ceff->GetYaxis()->GetNbins();
      for (int i=1;i<=nx;i++) {
	for (int j=1;j<=ny;j++) {
	  if(Ceff->GetBinContent(i,j) !=0 ) {
	    double ccc1 =  Ceff->GetBinContent(i,j) ;
	    diffADCAmpl_Depth1_HF->Fill(ccc1);
	  }
	}
      }
      gPad->SetLogy();
      diffADCAmpl_Depth1_HF->SetMarkerStyle(20);
      diffADCAmpl_Depth1_HF->SetMarkerSize(0.4);
      diffADCAmpl_Depth1_HF->GetYaxis()->SetLabelSize(0.04);
      diffADCAmpl_Depth1_HF->SetXTitle("<ADCAmpl> in each cell \b");
      diffADCAmpl_Depth1_HF->SetMarkerColor(2);
      diffADCAmpl_Depth1_HF->SetLineColor(2);
      diffADCAmpl_Depth1_HF->Draw("");



2.Dlya occupancy plots:

      TH2F *twod1= (TH2F*)hfile1->Get("h_mapDepth1ADCAmpl_HF");
      TH2F *twod0= (TH2F*)hfile1->Get("h_mapDepth1_HF");
      twod1->Sumw2();
      twod0->Sumw2();
      if(twod0->IsA()->InheritsFrom("TH2F")){
	TH2F* Cefz= (TH2F*)twod1->Clone("Cefz");
	Cefz->Divide(twod1,twod0, 1, 1, "B");
	Cefz->Sumw2();
      }
      TH2F *Cefz225= (TH2F*)hfile1->Get("h_mapDepth1_HF");



      c1->cd(1);
      TH1F* ADCAmplperLS  = new TH1F("ADCAmplperLS ","", 72, 1.,73.);
      TH2F* Diffe_Depth1_HF = (TH2F*)Cefz225->Clone("h_mapDepth1_HF ");
      int nx = Cefz225->GetXaxis()->GetNbins();
      int ny = Cefz225->GetYaxis()->GetNbins();
      int ncountall=0;
      int ncountmin=0;
      int nnnmin=10000000000000000;
      int nnnbins=0;
      for (int j=1;j<=ny;j++) {
//	cout<<" HF-    ****************   j = "<<   j    <<endl;
	
	for (int i=1;i<=nx;i++) {
	  if(i< 42) {
	    //	    if(Cefz->GetBinContent(i,j) > 0.) cout<<" i = "<<i<<" j = "<<j<<"  BinContent= "<<    Cefz->GetBinContent(i,j)    <<endl;
	    
	    // no cuts - take all
	    //	    	    if(Cefz->GetBinContent(i,j)> -10.) {
	    // cut on RMS:
	    //	    if(Cefz->GetBinContent(i,j)> 1.) {
	    // cut on Amplitude
	    if(Cefz->GetBinContent(i,j)> 40.) {
	      
	      
	      double ccc1 =  Cefz225->GetBinContent(i,j);
	      if(ccc1>0.) {
		ADCAmplperLS ->Fill(float(j), ccc1);
		ncountall += ccc1 ;
		ncountmin += ccc1;
	      }
	    }
	  }
	}
	if(ncountmin> 0) {
//	  cout<<" HF-    - ncountmin = "<<   ncountmin    <<" ncountall  = "<<   ncountall    <<endl;
	  if(ncountmin < nnnmin ) nnnmin = ncountmin;
	  ncountmin=0;
	  nnnbins++;
	}
      }
//      cout<<" HF-    - ncountall = "<<   ncountall    <<" nnnmin= "<<   nnnmin    <<" nnnbins= "<<   nnnbins    <<" Ave= "<<   ncountall/nnnbins    <<endl;
      if(nnnmin > 0.) cout<<" HF-    - ncountall/nnnbins/nnnmin = "<<   (float)ncountall/nnnbins/nnnmin    <<endl;
      

      //      gPad->SetLogy();
      ADCAmplperLS ->SetMarkerStyle(20);
      ADCAmplperLS ->SetMarkerSize(0.4);
      ADCAmplperLS ->GetYaxis()->SetLabelSize(0.04);
//      ADCAmplperLS ->SetXTitle("<ADCAmpl> per LS HB1 \b");
      ADCAmplperLS ->SetMarkerColor(2);
      ADCAmplperLS ->SetLineColor(4);
//      ADCAmplperLS ->SetMaximum(30.0);
//      ADCAmplperLS ->SetMinimum(25.0);
      ADCAmplperLS->SetXTitle(" #hits vs Phi for  HF-  cut:A>40\\b");
      ADCAmplperLS ->Draw();
      
      /////////////////////////////////////////////////////////////////////////////////////////////////
      c1->cd(2);
      TH1F* ADCAmplperLS2  = new TH1F("ADCAmplperLS2 ","", 72, 1.,73.);
      TH2F* Diffe_Depth1_HF = (TH2F*)Cefz225->Clone("h_mapDepth1_HF ");
      int nx = Cefz225->GetXaxis()->GetNbins();
      int ny = Cefz225->GetYaxis()->GetNbins();
      int ncountall=0;
      int ncountmin=0;
      int nnnmin=10000000000000000;
      int nnnbins=0;
      for (int j=1;j<=ny;j++) {
//	cout<<" HF-    ****************   j = "<<   j    <<endl;
	
	for (int i=1;i<=nx;i++) {
	  if(i> 41) {
	    
	    
	    
	    // no cuts - take all
//	    	    if(Cefz->GetBinContent(i,j)> -10.) {
	    // cut on RMS:
//	    if(Cefz->GetBinContent(i,j)> 1.) {
	      // cut on Amplitude
	    if(Cefz->GetBinContent(i,j)> 40.) {


	      double ccc1 =  Cefz225->GetBinContent(i,j);
	      if(ccc1>0.) {
		ADCAmplperLS2 ->Fill(float(j), ccc1);
		ncountall += ccc1 ;
		ncountmin += ccc1;
	      }
	    }
	  }
	}
	if(ncountmin> 0) {
//	  cout<<" HF+    - ncountmin = "<<   ncountmin    <<" ncountall  = "<<   ncountall    <<endl;
	  if(ncountmin < nnnmin ) nnnmin = ncountmin;
	  ncountmin=0;
	  nnnbins++;
	}
      }
//      cout<<" HF+    - ncountall = "<<   ncountall    <<" nnnmin= "<<   nnnmin    <<" nnnbins= "<<   nnnbins    <<" Ave= "<<   ncountall/nnnbins    <<endl;
      if(nnnmin > 0.) cout<<" HF+    - ncountall/nnnbins/nnnmin = "<<   (float)ncountall/nnnbins/nnnmin    <<endl;
      



      //      gPad->SetLogy();
      ADCAmplperLS2 ->SetMarkerStyle(20);
      ADCAmplperLS2 ->SetMarkerSize(0.4);
      ADCAmplperLS2 ->GetYaxis()->SetLabelSize(0.04);
//      ADCAmplperLS2 ->SetXTitle("<ADCAmpl> per LS HB1 \b");
      ADCAmplperLS2 ->SetMarkerColor(2);
      ADCAmplperLS2 ->SetLineColor(4);
//      ADCAmplperLS2 ->SetMaximum(30.0);
//      ADCAmplperLS2 ->SetMinimum(25.0);
      ADCAmplperLS2->SetXTitle(" #hits vs Phi for  HF+ cut:A>40\b");
      ADCAmplperLS2 ->Draw("");
      


3. Dlya <A> vs LS po 4-m kvadrantam P1, P2, M1, M2:

      TH1F *twod3= (TH1F*)hfile1->Get("h_sumADCAmplperLS6_P1" );
      TH1F *twod2= (TH1F*)hfile1->Get("h_sum0ADCAmplperLS6_P1");
      twod3->Sumw2();
      twod2->Sumw2();
      if(twod2->IsA()->InheritsFrom("TH1F")){
	TH1F* ERT1 = (TH1F*)twod3->Clone("ERT1");
	ERT1->Divide(twod3,twod2, 1, 1, "B");
	ERT1->Sumw2();
      }

